    trollmus:
      description: This command is WIP.
      usage: /<command> [player]
      permission: TrollYourPlayers.trollmus
      permission-message: Command not found.
 
 else if (cmd.getName().equalsIgnoreCase("trollmus")){
			//cast sender to player
			Player senderplayer = (Player) sender;
			//Store the argument in the variable target.
			Player target;
			public final argsstring = args.toString();
			Player argsstring = (Player) target;
			//Get current players in the world and store in variable currentplayers.
			String currentplayers = ((Location) sender).getWorld().getPlayers().toString();
			//See if the targeted player is in the current world.
			if (currentplayers.contains(args.toString())){
				//do stuff to targeted player.
				target.playSound(target.getLocation(), Sound.NOTE_PIANO, 1, 1);
				try {
					wait(2);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				target.playSound(player.getLocation(), Sound.NOTE_PIANO, 1, 1);
				try {
					wait(2);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				player.playSound(player.getLocation(), Sound.NOTE_PIANO, 1, 1);
				try {
					wait(2);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				player.playSound(player.getLocation(), Sound.NOTE_PIANO, 1, 1);
				try {
					wait(2);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				player.playSound(player.getLocation(), Sound.NOTE_PIANO, 1, 1);
				try {
					wait(2);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				player.playSound(player.getLocation(), Sound.NOTE_PIANO, 1, 1);
				try {
					wait(2);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				player.playSound(player.getLocation(), Sound.NOTE_PIANO, 1, 1);
				try {
					wait(2);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
			}else{
				sender.sendMessage(ChatColor.RED + "ERROR: Targeted player not found or not in the same world!");
			}
			
		}